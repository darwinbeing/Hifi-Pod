#
# qmake configuration for building with arm-linux-g++ - DM3730
#

include(../../common/gcc-base.conf)
#Prabu modified below
include(../../common/gcc-base-unix.conf)
include(../../common/g++-unix.conf)
include(../../common/qws.conf)


#User specific Path - To Be edited by User
QT_INSTALL_DIR          = /home/prabindh/work1/arm-qt/qt-everywhere-opensource-src-4.8.0
SGX_SDK_ROOT	        = /home/prabindh/Graphics_SDK_4_05_00_03
TSLIB_INCDIR            = 
TSLIB_LIBDIR            = 

GLIB_INCDIR            = $$QT_INSTALL_DIR/../test_install/usr/include/glib-2.0
GLIB_CONFIGINCLUDEDIR	= $$QT_INSTALL_DIR/../test_install/usr/lib/glib-2.0/include
GST_INCLUDEDIR	= $$QT_INSTALL_DIR/../test_install/usr/include/gstreamer-0.10
LIBXML_INCLUDEDIR = $$QT_INSTALL_DIR/../test_install/usr/include/libxml2

# modifications to g++.conf
#Prabu modified below
#QMAKE_CFLAGS_RELEASE	= -O3 -march=armv7-a -mtune=cortex-a8 -mfpu=neon -mfloat-abi=softfp
#QMAKE_CXXFLAGS_RELEASE	= -O3 -march=armv7-a -mtune=cortex-a8 -mfpu=neon -mfloat-abi=softfp
QMAKE_CFLAGS	+= -O3 -march=armv7-a -mtune=cortex-a8 -mfpu=neon -mfloat-abi=softfp
QMAKE_CXXFLAGS	+= -O3 -march=armv7-a -mtune=cortex-a8 -mfpu=neon -mfloat-abi=softfp

QMAKE_CC                = arm-arago-linux-gnueabi-gcc
QMAKE_CXX               = arm-arago-linux-gnueabi-g++
QMAKE_LINK              = arm-arago-linux-gnueabi-g++
QMAKE_LINK_SHLIB        = arm-arago-linux-gnueabi-g++

# modifications to linux.conf
QMAKE_AR                = arm-arago-linux-gnueabi-ar cqs
QMAKE_OBJCOPY           = arm-arago-linux-gnueabi-objcopy
QMAKE_STRIP             = arm-arago-linux-gnueabi-strip

# Prabu modified for Qt4.8
QMAKE_COPY = cp
QMAKE_DEL_FILE = rm
QMAKE_DEL_DIR = rm -r
QMAKE_MOVE = mv
QMAKE_CHK_DIR_EXISTS = test -d
QMAKE_MKDIR = mkdir -p

#Do not edit beyond this

QMAKE_INCDIR_OPENGL_ES2 = $$SGX_SDK_ROOT/include/OGLES2
QMAKE_LIBDIR_OPENGL_ES2 = $$SGX_SDK_ROOT/gfx_dbg_es5.x
QMAKE_LIBS_OPENGL_ES2   = -lEGL -lGLESv2 -lGLES_CM -lIMGegl -lsrv_um -lusc

QMAKE_INCDIR_OPENGL     += $$QMAKE_INCDIR_OPENGL_ES2
QMAKE_LIBDIR_OPENGL     = $$QMAKE_LIBDIR_OPENGL_ES2
QMAKE_LIBDIR_OPENGL_QT  = $$QMAKE_LIBDIR_OPENGL_ES2
QMAKE_LIBS_OPENGL_ES1   = -lEGL -lGLES_CM -lIMGegl -lsrv_um -lusc

QMAKE_INCDIR_OPENVG     = $$QMAKE_INCDIR_OPENGL_ES2
QMAKE_LIBDIR_OPENVG     = $$QMAKE_LIBDIR_OPENGL_ES2
QMAKE_LIBS_OPENVG       = -lEGL -lGLESv2 -lGLES_CM -lIMGegl -lsrv_um -lOpenVG -lOpenVGU

QMAKE_INCDIR_EGL        = $$QMAKE_INCDIR_OPENGL_ES2
QMAKE_INCDIR_EGL        += $$QT_INSTALL_DIR/src/3rdparty/powervr/wsegl2
QMAKE_INCDIR_POWERVR    = $$QT_INSTALL_DIR/src/3rdparty/powervr/wsegl2
QMAKE_LIBDIR_EGL        = $$QMAKE_LIBDIR_OPENGL_ES2
QMAKE_LIBS_EGL          = -lEGL -lIMGegl -lsrv_um -lGLESv2 -lGLES_CM -lusc

QMAKE_INCDIR += $$TSLIB_INCDIR 
QMAKE_INCDIR += $$GLIB_INCDIR 
QMAKE_INCDIR += $$GLIB_CONFIGINCLUDEDIR
QMAKE_INCDIR += $$GST_INCLUDEDIR
QMAKE_INCDIR += $$LIBXML_INCLUDEDIR

QMAKE_INCDIR += $$QMAKE_INCDIR_OPENGL_ES2
QMAKE_LIBDIR += $$QMAKE_LIBDIR_OPENGL_ES2 
QMAKE_LIBDIR += $$TSLIB_LIBDIR
#QMAKE_LIBS += $$QMAKE_LIBS_OPENGL_ES2 -lts -lglib -lgthread-2.0 -lgstreamer-0.10
QMAKE_LIBS += $$QMAKE_LIBS_OPENGL_ES2

load(qt_config)

